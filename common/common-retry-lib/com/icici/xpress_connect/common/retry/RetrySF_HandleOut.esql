BROKER SCHEMA com.icici.xpress_connect.common.retry



CREATE COMPUTE MODULE RetrySF_HandleOut
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN	
		

	IF SEND_CB_PACKET THEN
		--Creating packet for CIRCUIT BREAKER
		DECLARE refOut REFERENCE TO OutputRoot;
		CREATE LASTCHILD OF OutputRoot AS refOut DOMAIN('JSON');
		CREATE LASTCHILD OF refOut AS refOut NAME 'Data';
		SET refOut.endpoint_uri 							= InputLocalEnvironment.WrittenDestination.HTTP.RequestURL;
		SET refOut.health_indicator 						= TRUE;
		SET refOut.health_check_endpoint_uri				= HEALTH_CHECK_ENDPOINT_URI;
		SET refOut.ping_packet								= PING_PACKET;
		SET refOut.ping_interval							= PING_INTERVAL;
		SET refOut.circuit_breaker_policy					= CB_POLICY_NAME;
		SET refOut.api_controller_callback_endpoint_uri		= API_CALLBACK_URI;
		SET refOut.client_code								= CLIENT_CODE;
		
		CREATE LASTCHILD OF refOut AS refOut IDENTITY (JSON.Object)resposiveness_policy;
		CREATE LASTCHILD OF refOut AS refOut IDENTITY (JSON.Array)http_status_code;
		SET refOut.Item[1] = SUCCESS_HTTP_CODES;
		
		PROPAGATE TO TERMINAL 'out1';
	END IF;
		--Success packet
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
