BROKER SCHEMA com.icici.xpress_connect.ecollection.mh.ci
PATH com.icici.xpress_connect.common.api;

CREATE COMPUTE MODULE ClientGateway_ImmediateReplySuccess
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
--		 CALL CopyMessageHeaders();
--		 CALL CopyEntireMessage();

		SET OutputRoot.HTTPReplyHeader."Content-Type" 			= CONTENT_TYPE_MIME_JSON;

		CREATE FIELD OutputRoot.JSON.Data IDENTITY(JSON.Object) Data;
		DECLARE refAPIResponse REFERENCE TO OutputRoot.JSON.Data;

		IF NOT EXISTS(Environment.Variables.eCollection.mh.API.Request.Message[]) THEN
			SET Environment.Variables.eCollection.mh.API.Request.Message = InputRoot.Collection.Input.JSON.Data;
			SET Environment.Variables.eCollection.mh.API.Request.RequestIdentifier = InputRoot.Collection.Input.MQRFH2.usr.RequestIdentifier; 	
		END IF;
		
		DECLARE refAPIRequest REFERENCE TO Environment.Variables.eCollection.mh.API.Request.Message;
		DECLARE refClientAPIResponse REFERENCE TO InputRoot.Collection.Res.JSON.Data;

		SET OutputLocalEnvironment.Destination.HTTP.RequestIdentifier = CAST(Environment.Variables.eCollection.mh.API.Request.RequestIdentifier AS BLOB);

		DECLARE refClientAPIResponseHeader REFERENCE TO InputRoot.HTTPResponseHeader;
		DECLARE refAPIResponseHeader REFERENCE TO OutputRoot.HTTPReplyHeader;

		SET refAPIResponseHeader."IXC-Client-API-Type" 	= API_TYPE_REST_JSON;


 		DECLARE chStatusCode CHARACTER refClientAPIResponse.validation_status_code;
		DECLARE chCompCode CHARACTER refClientAPIResponse.completion_code;
		IF chStatusCode = API_CUSTOMER_TXN_ACCEPT_RESPONSE THEN
				-- Map client response with our API response.
				-- Introduced for injecting client HTTP headers.
				CALL mapAPIResponse(refClientAPIResponse, refClientAPIResponseHeader, 
															 refAPIResponse, refAPIResponseHeader, refAPIRequest, TRUE);

		ELSEIF chStatusCode = API_CUSTOMER_TXN_REJECT_RESPONSE THEN
				-- Map client response with our API response.
				-- Introduced for injecting client HTTP headers.
				CALL mapAPIResponse(refClientAPIResponse, refClientAPIResponseHeader, 
															 refAPIResponse, refAPIResponseHeader, refAPIRequest, TRUE);

		ELSEIF chCompCode = API_COMPLETION_CODE_ERROR THEN
--				SET OutputLocalEnvironment.Destination.HTTP.ReplyStatusCode = API_HTTP_STATUS_CODE_BAD_GATEWAY;

				-- Map client response with our API response.
				-- Introduced for injecting client HTTP headers.
				CALL mapAPIResponse(refClientAPIResponse, refClientAPIResponseHeader, 
															 refAPIResponse, refAPIResponseHeader, refAPIRequest, TRUE);

		ELSE
			SET OutputRoot.JSON.Data = refClientAPIResponse;
		END IF;	
				 		 
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;


	-- Map / Build API response body (data / payload).
	-- Introduced for injecting client HTTP headers.
	CREATE FUNCTION mapAPIResponse(IN refClientAPIResponse REFERENCE, IN refClientAPIResponseHeader REFERENCE, 
																		 INOUT refAPIResponse REFERENCE, INOUT refAPIResponseHeader REFERENCE,  
																		 IN refAPIRequest REFERENCE, IN isMessageSecure BOOLEAN)
	BEGIN
		-- Unexpected partial (incomplete) response was received from Resteasy mock service implementation. 
		-- This lead to a parsing error. Note that the content-type header was returned by the service. But the response did not 
		-- comply with the content-type. Handling this rare but possible condition.
		-- TODO: Need to discern between parsing issues and faulty implementation (code weave).
		
		DECLARE CONTINUE HANDLER FOR  SQLSTATE LIKE '%' 
		BEGIN
			CALL com.icici.xpress_connect.common.api.prepareErrorResponse(refAPIRequest, refAPIResponse, 
			API_COMPLETION_CODE_ERROR, API_REASON_CODE_RESPONSE_NOT_PARSEABLE, TRUE);
		END;
		
		IF OPTIMIZE_FOR_UNIFIED_API THEN
			CALL com.icici.xpress_connect.common.api.defaultMapAPIResponse(refClientAPIResponse, refAPIResponse);
			SET refAPIResponse.*[] = refClientAPIResponse.*[];
		ELSE	
			IF NOT isMessageSecure THEN
				CALL com.icici.xpress_connect.common.api.prepareErrorResponse(refAPIRequest, refAPIResponse, 
				API_COMPLETION_CODE_ERROR, API_REASON_CODE_SECURITY_EXCEPTION_CONFIGRITY, TRUE);
				
				RETURN;
			END IF;
				
			-- Build default API response. Include business data from the request as well.
			CALL com.icici.xpress_connect.common.api.buildAPIResponse(refAPIRequest, refAPIResponse, API_RESPONSE_DEFAULT_MAP);

			-- Uses API field map on Customer On-Boarding Portal to produce ESQL code.
			-- Introduced for injecting client HTTP headers.
			CALL com.icici.xpress_connect.ecollection.mh.ci.intimation.genMapAPIResponse(refClientAPIResponse, refClientAPIResponseHeader, 
								refAPIResponse, refAPIResponseHeader, refAPIRequest);

			IF COALESCE(refAPIResponse.completion_code, '') = '' THEN
				-- TODO
				-- THROW USER EXCEPTION SEVERITY 1 CATALOG 'BIPMsg' MESSAGE 
				--	'Client API response not in line with the expected format or there was a client API response transformation error.';
			END IF;
		END IF;	
		
	END;
	
END MODULE;
