BROKER SCHEMA com.icici.xpress_connect.ecollection.mh.ci
PATH com.icici.xpress_connect.common.api;


CREATE COMPUTE MODULE ClientGateway_HandleAcknowledgement
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

		CREATE FIELD OutputRoot.HTTPRequestHeader;
		DECLARE refAPIRequest REFERENCE TO InputRoot.JSON.Data;
		CREATE FIELD OutputRoot.JSON.Data IDENTITY(JSON.Object) Data;
		DECLARE refAPIResponse REFERENCE TO OutputRoot.JSON.Data;
		Call prepareAckResponse(refAPIRequest, refAPIResponse, API_COMPLETION_CODE_SUCCESSFUL , API_REASON_CODE_REQUEST_PROVISIONALLY_ACCEPTED, TRUE);
		
		SET OutputLocalEnvironment.Destination.HTTP.ReplyStatusCode = API_HTTP_STATUS_CODE_ACCEPTED;
--		CALL addHTTPResponseHeaders();

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	
	CREATE FUNCTION prepareAckResponse (IN refAPIRequest REFERENCE,  INOUT refAPIResponse REFERENCE,  
											IN completionCode INTEGER,  IN reasonCode CHARACTER, IN apiOptimization BOOLEAN) 
		BEGIN

			CALL com.icici.xpress_connect.common.api.buildAPIResponse(refAPIRequest, refAPIResponse, apiOptimization);
			-- Augment the response with Completion Code, Reason Code, Message.
			CALL addResponseStatus(refAPIResponse,
						completionCode,
						reasonCode,
						lookupExtendedReasonMessage(reasonCode));		
		END;


	-- REST XML
	CREATE FUNCTION addHTTPResponseHeaders()
	BEGIN
		SET OutputRoot.Properties.ContentType = COALESCE(InputRoot.HTTPInputHeader."Content-Type", CONTENT_TYPE_MIME_JSON);
		SET OutputRoot.Properties.Encoding = InputRoot.Properties.Encoding; 
		SET OutputRoot.Properties.CodedCharSetId = InputRoot.Properties.CodedCharSetId;

		SET OutputRoot.HTTPRequestHeader."Content-Type" = COALESCE(InputRoot.HTTPInputHeader."Content-Type", CONTENT_TYPE_MIME_JSON);
		SET OutputRoot.HTTPRequestHeader."Content-Encoding" = InputRoot.HTTPInputHeader."Content-Encoding";

	END;

	END MODULE;
	
